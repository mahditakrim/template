openapi: 3.0.3
info:
  title: Library
  description: Library crud service
  version: 1.0.0
servers:
  - url: http://localhost:8080/library

paths:
  /book:
    put:
      tags:
        - book
      summary: Update an existing book
      description: Update an existing book by Id
      operationId: updateBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/book'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
                example: ok
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        '422':
          description: invalid request entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
          
    post:
      tags:
        - book
      summary: create a book
      description: creating a book and returning id
      operationId: createBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/book'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                example: {"ID": 1}
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        '422':
          description: invalid request entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
        
    get:
      tags:
        - book
      summary: get a book
      description: get a book by id
      operationId: getBook
      parameters:
        - in: query
          name: book_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/book'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
                
    delete:
      tags:
        - book
      summary: remove a book
      description: remove a book by id
      operationId: removeBook
      parameters:
        - in: query
          name: book_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
                example: ok
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'
              
  /books:  
    get:
      tags:
        - book
      summary: get all books
      description: gets all of the books
      operationId: getBooks
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/book'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/err'

components:
  schemas:
    err:
      type: object
      example: {"err": "some error"}
  
    book:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        writer:
          type: string
        page_num:
          type: integer
          format: uint
